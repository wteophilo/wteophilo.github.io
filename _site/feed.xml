<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-05-01T16:42:42-03:00</updated><id>http://localhost:4000/</id><title type="html">Willian Teophilo</title><subtitle>Willian Teophilo</subtitle><author><name>Willian Teophilo</name></author><entry><title type="html">Estrutura Vuejs</title><link href="http://localhost:4000/2018/05/01/estrutura-vuejs.html" rel="alternate" type="text/html" title="Estrutura Vuejs" /><published>2018-05-01T14:20:00-03:00</published><updated>2018-05-01T14:20:00-03:00</updated><id>http://localhost:4000/2018/05/01/estrutura-vuejs</id><content type="html" xml:base="http://localhost:4000/2018/05/01/estrutura-vuejs.html">&lt;p&gt;Continuando nossos posts sobre o Vuejs. Esse artigo será separado em duas partes:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Estrutura de pastas de um projeto Vuejs&lt;/li&gt;
  &lt;li&gt;Templates webpack&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Caso não tenha visto o primeiro post clique &lt;a href=&quot;https://wteophilo.github.io/2018/04/03/ola-vuejs.html&quot;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;estrutura-vuejs&quot;&gt;Estrutura Vuejs&lt;/h2&gt;

&lt;p&gt;Vamos começar pela estrutura do Vuejs, a estrutura do projeto vai depender muito do template escolhido durante a criação do projeto, abaixo listei as pastas ou arquivos mais comuns:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;build/&lt;/strong&gt;
Esse diretório contém as configurações reais do servidor de desenvolvimento e da compilação do webpack de produção.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;src/&lt;/strong&gt;
Contêm todos código fonte da sua aplicação, a estrutura de como ficarão os arquivos é da escolha do desenvolvedor… então organize com cuidado.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;static/&lt;/strong&gt;:
Diretório onde serão inseridos os arquivos estaticos(css,imagens etc) a ser processados pelo webpack, estes arquivos serão copiados diretamente no mesmo diretório em que os assets gerados pelo Werbpack, consulte qual gerenciador que você utilizará para mais detalhes.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;test/unit&lt;/strong&gt;:
Contêm arquivos relcionados aos testes unitários.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;test/e2e&lt;/strong&gt;:
Contêm arquivos testes e2e(&lt;a href=&quot;https://vuejs-templates.github.io/webpack/e2e.html&quot;&gt;End-to-End Testing&lt;/a&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;index.html&lt;/strong&gt;:
Este é o template para single page. Durante o desenvolvimento e as compilações, o Webpack gera assets e URLs desses assets gerados serão automaticamente injetadas nesse modelo para renderizar o HTML final.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;package.json&lt;/strong&gt;:
Contém todas as dependências do projeto.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;templates-webpack&quot;&gt;Templates WebPack&lt;/h2&gt;

&lt;p&gt;Quando vamos criar um projeto vimos que podemos escolher a estrutura(template) do projeto, cada um desses templates utilizam estruturas de pasta diferente. O Vuejs utiliza como bundler tanto &lt;a href=&quot;https://webpack.js.org/&quot;&gt;webpack&lt;/a&gt; quanto o &lt;a href=&quot;http://browserify.org/&quot;&gt;browserify&lt;/a&gt;. Neste &lt;a href=&quot;https://medium.freecodecamp.org/browserify-vs-webpack-b3d7ca08a0a9&quot;&gt;link&lt;/a&gt; existe um post comparando os templates.&lt;/p&gt;

&lt;h3 id=&quot;tipos-templates&quot;&gt;Tipos Templates&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/vuejs-templates/webpack&quot;&gt;webpack&lt;/a&gt;: É o pacote mais completo ou seja ele utiliza o webpack como bundler,possui   vue-loader com hot reload, javascript lint e testes unitários.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/vuejs-templates/webpack-simple&quot;&gt;webpack-simple&lt;/a&gt;: utiliza o webpack como bundler mas com menos recursos.O webpack-simple não possui hot reload, javascript lint e nem testes unitários.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/vuejs-templates/browserify&quot;&gt;browserify&lt;/a&gt;: usa o browserify como module bundler. Possui o vue-loader com hot reload, javascript lint e testes unitários.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/vuejs-templates/browserify-simple&quot;&gt;browserify-simple&lt;/a&gt;: usa o browserify como module bundler, sem hot reload, lint ou testes unitários.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/vuejs-templates/simple&quot;&gt;simple&lt;/a&gt;: o template mais simples, não utiliza nenhum bundle possui apenas uma única página com o Vue sendo carregado através de um endereço &lt;a href=&quot;Content Delivery Network&quot;&gt;CDN&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;buildjs&quot;&gt;Build.js&lt;/h3&gt;
&lt;p&gt;Se você já conhece o Vuejs provavelmente está se perguntando porque não falei sobre o arquivo build.js, não esqueci dele apenas deixe-o por último.&lt;/p&gt;

&lt;p&gt;Basicamente o arquivo build.js é todo o conteúdo da pasta &lt;strong&gt;src&lt;/strong&gt;, onde as páginas se transformam em javascript e assim são carregados em memória, deixando que toda alteração feita pelo desenvolvedor seja carrega e exibida em instantes.&lt;/p&gt;

&lt;h3 id=&quot;babel&quot;&gt;Babel&lt;/h3&gt;
&lt;p&gt;Mas quem faz essa transformação dos arquivos? O Vuejs utiliza o transpilador &lt;a href=&quot;https://babeljs.io/&quot;&gt;Babel&lt;/a&gt; basicamente transcreve código escrito em ES2015(ecmascript 6) para ES5(ecmascript 5) garantindo assim compatibilidade entre os browsers.&lt;/p&gt;

&lt;p&gt;Por enquanto é só isso, nos vemos na próxima.&lt;/p&gt;</content><author><name>Willian Teophilo</name></author><category term="vuejs" /><summary type="html">Continuando nossos posts sobre o Vuejs. Esse artigo será separado em duas partes: Estrutura de pastas de um projeto Vuejs Templates webpack</summary></entry><entry><title type="html">RSpec-It vs Xit</title><link href="http://localhost:4000/2018/04/14/rspec-it-vs-xit.html" rel="alternate" type="text/html" title="RSpec-It vs Xit" /><published>2018-04-14T09:41:00-03:00</published><updated>2018-04-14T09:41:00-03:00</updated><id>http://localhost:4000/2018/04/14/rspec-it-vs-xit</id><content type="html" xml:base="http://localhost:4000/2018/04/14/rspec-it-vs-xit.html">&lt;p&gt;Hoje vamos falar um pouco mais sobre o rspec e como pular alguns testes…
Calma a ideia não é burlar nossos testes mas as vezes estamos focados em uma feature e os testes quebram em outros locais…sei que você vai voltar e resolver o problema ;).&lt;/p&gt;

&lt;p&gt;Sabemos que quando declaramos um novo teste e não o preenchemos o log é exibido como pendente.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Deve fazer alguma coisa&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Resultado:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;Pending: &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Failures listed here are expected and &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;not affect your suite&lt;span class=&quot;s1&quot;&gt;'s status)

  1) Calculator#sum Deve fazer algo
     # Not yet implemented&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Agora para pularmos um item de nossos testes é necessário apenas adicionarmos o comando &lt;strong&gt;xit&lt;/strong&gt; ao invés do it na descrição do teste. Abaixo existe um treço de código mostrando o compartamento do xit:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;calculator&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Calculator&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:calc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;described_class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()}&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#sum&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;with positive numbers&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; 
			&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;calc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

		&lt;span class=&quot;n&quot;&gt;xit&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;with negative and positive numbers&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;calc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

		&lt;span class=&quot;n&quot;&gt;xit&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;with negative numbers&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;calc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;Pending: &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Failures listed here are expected and &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;not affect your suite&lt;span class=&quot;s1&quot;&gt;'s status)

  1) Calculator#sum with negative and positive numbers
     # Temporarily skipped with xit&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Por enquanto é só isso, nos vemos na próxima.&lt;/p&gt;</content><author><name>Willian Teophilo</name></author><category term="TDD" /><category term="RSpec" /><category term="Ruby on Rails" /><summary type="html">Hoje vamos falar um pouco mais sobre o rspec e como pular alguns testes… Calma a ideia não é burlar nossos testes mas as vezes estamos focados em uma feature e os testes quebram em outros locais…sei que você vai voltar e resolver o problema ;).</summary></entry><entry><title type="html">RSpec-Executando apenas um teste</title><link href="http://localhost:4000/2018/04/11/executando-apenas-um-teste.html" rel="alternate" type="text/html" title="RSpec-Executando apenas um teste" /><published>2018-04-11T21:03:00-03:00</published><updated>2018-04-11T21:03:00-03:00</updated><id>http://localhost:4000/2018/04/11/executando-apenas-um-teste</id><content type="html" xml:base="http://localhost:4000/2018/04/11/executando-apenas-um-teste.html">&lt;p&gt;Muitas vezes queremos rodar apenas um teste em nosso projeto e não toda nossa switch, para isso vamos ver alguns comandos que possam nos ajudar nessa tarefa.&lt;/p&gt;

&lt;h3 id=&quot;rspec-caminho&quot;&gt;RSpec caminho&lt;/h3&gt;
&lt;p&gt;Digamos que estamos fazendo um projeto em ruby, separamos nossos testes por pasta e queremos executar apenas um arquivo, então basta executar o comando:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;rspec /pasta/arquivo_spec.rb&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Assim todos os teste dentro do arquivo serão executados.&lt;/p&gt;

&lt;h3 id=&quot;executando-teste-pelo-título&quot;&gt;Executando teste pelo título&lt;/h3&gt;
&lt;p&gt;As vezes queremos executar apenas um teste dentro do nosso arquivo de teste, podemos fazer isso usando o sufixo -e “título”, por exemplo:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;rspec /nome_classe/arquivo_spec.rb -e &lt;span class=&quot;s2&quot;&gt;&quot;título&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;executando-teste-pela-linha&quot;&gt;Executando teste pela linha&lt;/h3&gt;
&lt;p&gt;Podemos também executar um teste por uma linha do arquivo,vamos utilizar o mesmo conceito do item anterior mas ao invés de buscar o título apenas utilizamos a linha que queremos executar.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;rspec /nome_classe/arquivo_spec.rb:linha&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Por enquanto é só isso, nos vemos na próxima.&lt;/p&gt;</content><author><name>Willian Teophilo</name></author><category term="TDD" /><category term="RSpec" /><category term="Ruby on Rails" /><summary type="html">Muitas vezes queremos rodar apenas um teste em nosso projeto e não toda nossa switch, para isso vamos ver alguns comandos que possam nos ajudar nessa tarefa.</summary></entry><entry><title type="html">Olá RSpec</title><link href="http://localhost:4000/2018/04/11/ola-rspec.html" rel="alternate" type="text/html" title="Olá RSpec" /><published>2018-04-11T20:50:00-03:00</published><updated>2018-04-11T20:50:00-03:00</updated><id>http://localhost:4000/2018/04/11/ola-rspec</id><content type="html" xml:base="http://localhost:4000/2018/04/11/ola-rspec.html">&lt;p&gt;O RSpec é um framework de testes escrito em Ruby que segue &lt;a href=&quot;https://pt.wikipedia.org/wiki/Behavior_Driven_Development&quot;&gt;BDD&lt;/a&gt;(Behavior Driven Development),nos códigos a seguir vou mostrar o RSpec no Rails.&lt;/p&gt;

&lt;h2 id=&quot;instalando&quot;&gt;Instalando&lt;/h2&gt;

&lt;p&gt;Para usar o RSpec basta instalar a gem:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;gem &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;rspec&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;ou em seu projeto rails adicione as seguintes linhas:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:development&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:test&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;  
  &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'rspec-rails'&lt;/span&gt;  
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Após instalado a gem basta executar o seguinte comando no terminal:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;rspec --init&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Após a executar o comando serão adicionados ao projeto a pasta &lt;strong&gt;spec&lt;/strong&gt;  e o arquivo &lt;strong&gt;spec_helper.rb&lt;/strong&gt; neste arquivo podemos realizar algumas configurações do rspec, vamos falar mais sobre em um outro post.&lt;/p&gt;

&lt;p&gt;Além dos arquivos citados anteriormente ganhamos alguns novos generators: models,job,feature etc, veja &lt;a href=&quot;https://relishapp.com/rspec/rspec-rails/docs/generators&quot;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;usando-o-rspec&quot;&gt;Usando o RSpec&lt;/h2&gt;

&lt;p&gt;Então temos nosso model &lt;strong&gt;Item&lt;/strong&gt; com uma validação:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationRecord&lt;/span&gt;  
  &lt;span class=&quot;n&quot;&gt;validates&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:quantity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;presence: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;E nosso teste onde queremos fazer dois testes:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Verificar se o campo &lt;strong&gt;name&lt;/strong&gt; está preenchido.&lt;/li&gt;
  &lt;li&gt;Mostrar uma mensagem caso não esteja.&lt;/li&gt;
  &lt;li&gt;Estamos usando a gem &lt;a href=&quot;https://github.com/thoughtbot/factory_bot_rails&quot;&gt;FactoryBot&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;	  
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt;  &lt;span class=&quot;s1&quot;&gt;'rails_helper'&lt;/span&gt;  
      
&lt;span class=&quot;no&quot;&gt;RSpec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;describe&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;type: :model&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;  
    &lt;span class=&quot;n&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;FactoryBot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  
    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Create a Item with all fields fill&quot;&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;  
    	 &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;valid?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be_truthy&lt;/span&gt;  
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;  
     
    
    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Create a Item without a name&quot;&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;  
        &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;  
        &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;valid?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be_falsey&lt;/span&gt;  
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;  
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Então vamos por partes e mostrar o que significa cada comando em nosso teste:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;RSpec.describe Item, type: :model  do:&lt;/strong&gt; Nesta linha estamos mostrando para o RSpec qual classe queremos testar e qual é tipo desta classe podem ser model,controller etc.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Context&lt;/strong&gt;: O contexto do nosso teste separando assim nossos testes por funcionalidade.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;It&lt;/strong&gt;: É usado para descrever o cenário que estamos testando.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Expect&lt;/strong&gt;: Resultado esperado do teste, pode ser tanto um resultado positivo quando negativo.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;executando-testes&quot;&gt;Executando Testes&lt;/h2&gt;

&lt;p&gt;Para executar os testes basta executar o seguinte comando:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;rake spec&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Como nossos teste são bem simples todos vão passar sem problemas então o resultado é :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;...................
Finished &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;1.5 seconds &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;files took 5.56 seconds to load&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
2 examples, 0 failures&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Outra maneira de executar os testes de uma forma mais visual seria executar o seguinte comando:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;rspec spec --format doc&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Para mostrar o –format doc do rspec de forma mais eficiente,vou adicionar mais testes no projeto assim visualmente vai ficar mais bonito:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt; 
ReportController
  Percentage infected
    Should &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;status 200
  Percentage non infected
    Should &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;status 200
  Lost Points
	Should &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;status 200

SuvivorsController
  Index
    should &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;status 200
  Create a suvivor
    Should &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;status 201
    should &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;status 406
  &lt;span class=&quot;k&quot;&gt;Return &lt;/span&gt;a single suvivor
    Should &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;status 200
    Should &lt;span class=&quot;k&quot;&gt;return  &lt;/span&gt;status 404
  Report a Suvivor
    Should &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;status 200
    Should &lt;span class=&quot;k&quot;&gt;return  &lt;/span&gt;status 404

TradeController
  Items &lt;span class=&quot;k&quot;&gt;from &lt;/span&gt;a single suvivor
    Should &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;status 200
  Make trade
    Should &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;status 200
    Should &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;status 406

Item
  Create a Item with all fields fill
  Create a Item without a name

ItemController
  Validate Field Suvivors:
    Create a Suvivor with all fields fill
    Create a Suvivor without a name
  Inventory
    Verify &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;has items on inventory
    Verify total of points

Finished &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;0.59228 seconds &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;files took 5.31 seconds to load&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
19 examples, 0 failures&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Até agora só foi mostrado os testes com sucesso mas e se ao alterar alguma linha o nosso teste “quebrar”?Como posso saber qual teste ou arquivo está com problemas?Essa é uma das partes que eu acho mais legal no RSpec, quando um teste falha ele mostra qual linha do teste esta errado e qual o teste está errado, veja abaixo:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt; 
Item
  Create a Item with all fields fill
  Create a Item without a name &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;FAILED - 1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

Failures:
1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Item Create a Item without a name
 Failure/Error: expect&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;item.valid?&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.to be_truthy

   expected: truthy value
        got: &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;# ./spec/models/item_spec.rb:11:in `block (2 levels) in &amp;lt;top (required)&amp;gt;'&lt;/span&gt;

Finished &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;0.66646 seconds &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;files took 5.61 seconds to load&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
19 examples, 1 failure

Failed examples:

rspec ./spec/models/item_spec.rb:9 &lt;span class=&quot;c1&quot;&gt;# Item Create a Item without a name&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Por enquanto é só isso, nos vemos na próxima.&lt;/p&gt;</content><author><name>Willian Teophilo</name></author><category term="TDD" /><category term="RSpec" /><category term="Ruby on Rails" /><summary type="html">O RSpec é um framework de testes escrito em Ruby que segue BDD(Behavior Driven Development),nos códigos a seguir vou mostrar o RSpec no Rails.</summary></entry><entry><title type="html">Requisitos Smart</title><link href="http://localhost:4000/2018/04/03/requisitos-smart.html" rel="alternate" type="text/html" title="Requisitos Smart" /><published>2018-04-03T21:35:00-03:00</published><updated>2018-04-03T21:35:00-03:00</updated><id>http://localhost:4000/2018/04/03/requisitos-smart</id><content type="html" xml:base="http://localhost:4000/2018/04/03/requisitos-smart.html">&lt;p&gt;Quando estamos desenvolvendo uma nova aplicação precisamos pensar nos requisitos.
Basicamente existem três tipos de requisitos:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Funcionais&lt;/li&gt;
  &lt;li&gt;Não Funcionais&lt;/li&gt;
  &lt;li&gt;Arquiteturais&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Neste artigo vamos focar nos &lt;strong&gt;requisitos arquiteturais&lt;/strong&gt;. Este tipo de requisito é geralmente confundido com requisitos não relacionais mas a utilização é uma pouco diferente.&lt;/p&gt;

&lt;p&gt;Durante o levantamento de requisitos podemos classificar quando um requisito possui algum significado a nossa arquitetura, ou seja,  é necessário alguma tomada de decisão tecnológica.&lt;/p&gt;

&lt;p&gt;Existem algumas técnicas que podemos utilizar para validação dos requisitos arquiteturais:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Requisitos SMART.&lt;/li&gt;
  &lt;li&gt;Modelo FURPS+.&lt;/li&gt;
  &lt;li&gt;O modelo ISO/IEC 9126.&lt;/li&gt;
  &lt;li&gt;QAW&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;requisitos-smart&quot;&gt;&lt;strong&gt;Requisitos SMART&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;A técnica SMART nos permite avaliar se um determinado requisito é valido ou não, o ponto chave desta técnica é transformar um requisito com frases subjetivas em algum mais técnico.&lt;/p&gt;

&lt;p&gt;Esta transformação deve seguir cinco passos e que as iniciais do método:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Specific(Especifico)&lt;/strong&gt;: Um requisito deve ser específico ou seja com nível adequado de detalhes&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Measurable(Mensurável)&lt;/strong&gt;: Com um objetivo alcançável para facilitar assim o teste de validação.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Attainable(Atingível)&lt;/strong&gt;: O requisito deve ser viável&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Realizable(Realizável)&lt;/strong&gt;:O requisito deve ser realizável,muitas vezes o requisito é atingível mas não realizável no prazo determinado do projeto.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Traceable(Rastreável)&lt;/strong&gt;: O requisito deve ser rastreável  desde sua concepção e especificação até o desenho, implementação e teste.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Como sempre vamos a um exemplo:&lt;/p&gt;

&lt;p&gt;Requisito
“O sistema Web deve ser rápido e capaz de processar grandes quantidades de requisições simultâneas”.&lt;/p&gt;

&lt;p&gt;Após a aplicação do SMART: 
“A tela de cadastro de usuários Web deve possuir um tempo de resposta menor de 8 segundos e suportar até 20 usuários simultaneamente em horários de pico( 15:00 às 19:00)”.&lt;/p&gt;

&lt;p&gt;Por enquanto é só isso, nos vemos na próxima.&lt;/p&gt;</content><author><name>Willian Teophilo</name></author><category term="arquitetura" /><category term="requisitos" /><summary type="html">Quando estamos desenvolvendo uma nova aplicação precisamos pensar nos requisitos. Basicamente existem três tipos de requisitos:</summary></entry><entry><title type="html">Olá Vuejs</title><link href="http://localhost:4000/2018/04/03/ola-vuejs.html" rel="alternate" type="text/html" title="Olá Vuejs" /><published>2018-04-03T14:01:00-03:00</published><updated>2018-04-03T14:01:00-03:00</updated><id>http://localhost:4000/2018/04/03/ola-vuejs</id><content type="html" xml:base="http://localhost:4000/2018/04/03/ola-vuejs.html">&lt;p&gt;Nos últimos tempos foram lançados vários frameworks Javascript e o mais novo queridinho é Vuejs,este é o meu primeiro post sobre o Vuejs onde serão abordados os seguintes assuntos neste post:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;O que é o Vuejs?&lt;/li&gt;
  &lt;li&gt;Instalando o Vue CLI&lt;/li&gt;
  &lt;li&gt;Iniciando um projeto&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;o-que-é-o-vuejs&quot;&gt;O que é o Vuejs?&lt;/h3&gt;

&lt;p&gt;O Vuejs é um framework Javascript  para criação de componentes reutilizáveis, algumas vantagens dele são:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Core muito pequeno os incríveis 17kb&lt;/li&gt;
  &lt;li&gt;DOM virtual(como o React do Facebook)&lt;/li&gt;
  &lt;li&gt;Componentes visuais reativos e combináveis&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;instalando-o-vue-cli&quot;&gt;Instalando o Vue CLI&lt;/h3&gt;

&lt;p&gt;Com o Node(a partir da versão 6.0) instalado vamos instalar o Vue CLI que irá nos auxiliar com a criação e manutenção de nossos projetos, para instalar o Vue CLI execute o seguinte comando no terminal:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; -g vue-cli&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Lembrando que &lt;strong&gt;-g&lt;/strong&gt; significa &lt;strong&gt;global&lt;/strong&gt; ou seja se seu usuário não tenha permissão de administrador podem ocorrer alguns erros… então execute o comando com permissão de administrador.&lt;/p&gt;

&lt;p&gt;Podemos confirmar a instalação do vue digitando o seguinte comando:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;vue --version
2.7.0&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;No meu caso tenho o Vue 2.7.0 instalado, mas é bem provável que já existe uma versão mais recente.&lt;/p&gt;

&lt;h3 id=&quot;iniciando-um-projeto&quot;&gt;Iniciando um projeto&lt;/h3&gt;

&lt;p&gt;Agora vamos criar um novo projeto usando o terminal execute o seguinte comando:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;vue init &amp;lt;template-name&amp;gt; &amp;lt;project-name&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;O que significa cada um desses comandos?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;vue init: iniciando o projeto com vue&lt;/li&gt;
  &lt;li&gt;template-name: template do projeto, a lista de todos os &lt;a href=&quot;https://github.com/vuejs-templates&quot;&gt;templates&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;project-name: nome do projeto&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Então para continuarmos o exemplo criei um projeto chamado olavue com o template &lt;a href=&quot;https://github.com/vuejs-templates/webpack-simple&quot;&gt;webpack-simple&lt;/a&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;vue init webpack-simple olavue&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ao executar o comando serão feitos algumas perguntas, como o nome do projeto, descrição, autor etc.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;A newer version of vue-cli is available.

This will &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;Vue 2.x version of the template.

&lt;span class=&quot;k&quot;&gt;For &lt;/span&gt;Vue 1.x use: vue init webpack-simple#1.0 olavue

? Project name olavue
? Project description A Vue.js project
? Author Willian Teophilo &amp;lt;wteophilo@gmail.com&amp;gt;
? License MIT
? Use sass? No

   vue-cli · Generated &lt;span class=&quot;s2&quot;&gt;&quot;olavue&quot;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;

   To get started:

     &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;olavue
     npm &lt;span class=&quot;nb&quot;&gt;install
     &lt;/span&gt;npm run dev&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Com o projeto criado precisamos instalar as dependências, para isso acesse a pasta do projeto e execute o seguinte comando:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;e por fim levantar o servidor:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;npm run dev

cross-env &lt;span class=&quot;nv&quot;&gt;NODE_ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;development webpack-dev-server --open --hot

Project is running at http://localhost:8080/
webpack output is served &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; /dist/
404s will fallback to /index.html&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Se tudo deu certo o projeto é disponibilizado em http://localhost:8080/ e a seguinte página é exibida:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/olavue.png&quot; alt=&quot;olavue&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Por enquanto é só isso, nos vemos na próxima.&lt;/p&gt;</content><author><name>Willian Teophilo</name></author><category term="vuejs" /><summary type="html">Nos últimos tempos foram lançados vários frameworks Javascript e o mais novo queridinho é Vuejs,este é o meu primeiro post sobre o Vuejs onde serão abordados os seguintes assuntos neste post:</summary></entry></feed>